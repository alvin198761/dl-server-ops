/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.alvin.donglan.ops.ui;

import java.awt.event.ActionEvent;
import java.io.File;
import javax.swing.AbstractAction;
import static javax.swing.Action.NAME;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import org.alvin.donglan.ops.bean.AppBean;
import org.alvin.donglan.ops.bean.DataConfig;
import org.alvin.donglan.ops.bean.ServerBean;
import org.alvin.donglan.ops.service.AppService;
import org.alvin.donglan.ops.ui.model.AppBeanTableModel;

/**
 *
 * @author Administrator
 */
public class MainFrame extends javax.swing.JFrame {

    private JList jList1;
    private AppService appService = new AppService();

    /**
     * Creates new form MainFrame
     */
    public MainFrame(DataConfig dataConfig) {
        initComponents();
        setSize(800, 600);
        setLocationRelativeTo(null);
        setTitle("spring boot 简单运维工具 V1 --唐植超");
        jList1 = new JList(dataConfig.getServerList().toArray());
        jList1.setFixedCellHeight(40);
        jScrollPane1.setViewportView(jList1);

        jButton1.setAction(new StartAppAction());
        jButton2.setAction(new UploadAppAction());

        jTable1.setModel(new AppBeanTableModel());
        jTable1.setRowHeight(30);
        jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jList1.getSelectionModel().addListSelectionListener(e -> {
            if (!e.getValueIsAdjusting()) {
                return;
            }
            ServerBean server = (ServerBean) jList1.getSelectedValue();
            if (server == null) {
                return;
            }
            AppBeanTableModel model = (AppBeanTableModel) jTable1.getModel();
            model.setContent(server.getApps());
            fireActionEnabledChange();
        });

        jTable1.getSelectionModel().addListSelectionListener(e -> {
            fireActionEnabledChange();
        });

        SwingUtilities.invokeLater(this::fireActionEnabledChange);
    }

    private void fireActionEnabledChange() {
        AbstractAction start = (AbstractAction) jButton1.getAction();
        start.setEnabled(jTable1.getModel().getRowCount() != 0 && jTable1.getSelectedRow() != -1);
        UploadAppAction upload = (UploadAppAction) jButton2.getAction();
        upload.setEnabled(jList1.getModel().getSize() != 0 && jList1.getSelectedIndex() != -1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setLeftComponent(jScrollPane1);

        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jButton1.setText("jButton1");
        jPanel2.add(jButton1);

        jButton2.setText("jButton2");
        jPanel2.add(jButton2);

        jPanel3.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jSplitPane1.setRightComponent(jPanel3);

        jPanel1.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    class StartAppAction extends AbstractAction {

        public StartAppAction() {
            putValue(NAME, "启动App");
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            new Thread(() -> {
                int row = jTable1.getSelectedRow();
                row = jTable1.convertRowIndexToModel(row);
                AppBeanTableModel mode = (AppBeanTableModel) jTable1.getModel();
                AppBean app = mode.getRow(row);
                ServerBean server = (ServerBean) jList1.getSelectedValue();
                appService.startApp(server, app);
            }).start();
        }
    }

    class UploadAppAction extends AbstractAction {

        public UploadAppAction() {
            putValue(NAME, "上传文件服务器根目录");
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            JFileChooser chooser = new JFileChooser();
//            FileNameExtensionFilter filter = new FileNameExtensionFilter(
//                    "JPG &amp; GIF Images", "jpg", "gif");
//            chooser.setFileFilter(filter);
            int returnVal = chooser.showOpenDialog(MainFrame.this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = chooser.getSelectedFile();
                ServerBean server = (ServerBean) jList1.getSelectedValue();
                appService.uploadFile(server, file);
            }
        }

    }
}
